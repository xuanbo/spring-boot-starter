package ${pkg}.controller;

import ${pkg}.condition.${entity}Condition;
import ${pkg}.entity.${entity};
import ${pkg}.service.${entity}Service;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import tk.fishfish.mybatis.controller.BaseController;
import tk.fishfish.mybatis.domain.Page;
import tk.fishfish.mybatis.domain.Query;

/**
 * created by ${author}
 */
@Slf4j
@RestController
@RequiredArgsConstructor
@RequestMapping("/v0/${tk.fishfish.codegen.util.StringUtils::toPath(entity)}")
public class ${entity}Controller extends BaseController {

    private final ${entity}Service ${tk.fishfish.codegen.util.StringUtils::toProperty(entity)}Service;

    @PostMapping("/page")
    public Page<${entity}> page(@RequestBody Query<${entity}Condition> query) {
        return ${tk.fishfish.codegen.util.StringUtils::toProperty(entity)}Service.page(query.getCondition(), query.getPage());
    }

}
